 Sorting Algorithms 

Bubble Sort:
-Repeatedly swaps adjacent elements if they are in the wrong order.
- Time Complexity: Best: O(n), Average: O(n^2), Worst: O(n^2)

Insertion Sort:
-  Inserts each element into its correct position in a sorted array.
- Time Complexity: Best: O(n), Average: O(n^2), Worst: O(n^2)

Quick Sort:
-  Divides the array with a pivot and recursively sorts sub-arrays.
- Time Complexity: Best/Average: O(n \log n),  Worst: O(n^2)

Merge Sort:
-  Divides and sorts halves, then merges them.
- Time Complexity: Best/Average/Worst: O(n \log n)



comparing Quick sort and Bubble Sort
Bubble Sort:
- Time Complexity:O(n^2) for average and worst cases.

Quick Sort
- Time Complexity: O(n \log n) on average.

Quick Sort is preferred because it has a more efficient average time complexity of O(n \log n)compared to Bubble Sort's O(n^2), making it better for large datasets.